{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/fbw-07-2/SPA/notetaking-application-obinna/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Split from 'react-split';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport Editor from './components/Editor/Editor';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [count, setCount] = useState(0);\n  const [notes, setNotes] = useState([]);\n  const [currentNoteId, setCurrentNoteId] = useState(notes[0] && notes[0].id || \"\");\n\n  const addNote = () => {\n    const newNote = {\n      id: setCount(prevCount => {\n        prevCount + 1;\n      }),\n      body: \"Enter text here\"\n    };\n    setNotes(prevNotes => [newNote, ...prevNotes]);\n    setCurrentNoteId(newNote.id);\n  };\n\n  const updateNote = text => {\n    setNotes(oldNotes => oldNotes.map(oldNote => {\n      return oldNote.id === currentNoteId ? { ...oldNote,\n        body: text\n      } : oldNote;\n    }));\n  };\n\n  const findCurrentNote = () => {\n    return notes.find(note => {\n      return note.id === currentNoteId;\n    }) || notes[0];\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: notes.length > 0 ? /*#__PURE__*/_jsxDEV(Split, {\n      sizes: [30, 70],\n      direction: \"horizontal\",\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        notes: notes,\n        currentNote: findCurrentNote(),\n        setCurrentNoteId: setCurrentNoteId,\n        newNote: addNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), currentNoteId && notes.length > 0 && /*#__PURE__*/_jsxDEV(Editor, {\n        currentNote: findCurrentNote(),\n        updateNote: updateNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 8\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-notes\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"You have no notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"first-note\",\n        children: \"Create one now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"9ZTMeuXLtQzIw06bmjfeKPKXB3g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/user/Documents/fbw-07-2/SPA/notetaking-application-obinna/src/App.jsx"],"names":["useState","Split","Sidebar","Editor","App","count","setCount","notes","setNotes","currentNoteId","setCurrentNoteId","id","addNote","newNote","prevCount","body","prevNotes","updateNote","text","oldNotes","map","oldNote","findCurrentNote","find","note","length"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AAEA,OAAO,WAAP;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAqBN,QAAQ,CAAC,CAAD,CAAnC;AAEA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAqBR,QAAQ,CAAC,EAAD,CAAnC;AAEA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAEO,KAAK,CAAC,CAAD,CAAL,IAAYA,KAAK,CAAC,CAAD,CAAL,CAASI,EAAtB,IAA6B,EAA9B,CAAlD;;AAEA,QAAMC,OAAO,GAAG,MAAM;AACpB,UAAMC,OAAO,GAAG;AACdF,MAAAA,EAAE,EAAEL,QAAQ,CAACQ,SAAS,IAAI;AAACA,QAAAA,SAAS,GAAG,CAAZ;AAAc,OAA7B,CADE;AAEdC,MAAAA,IAAI,EAAE;AAFQ,KAAhB;AAKAP,IAAAA,QAAQ,CAACQ,SAAS,IAAI,CAACH,OAAD,EAAU,GAAGG,SAAb,CAAd,CAAR;AACAN,IAAAA,gBAAgB,CAACG,OAAO,CAACF,EAAT,CAAhB;AACD,GARD;;AAUA,QAAMM,UAAU,GAAIC,IAAD,IAAU;AAC3BV,IAAAA,QAAQ,CAACW,QAAQ,IAAIA,QAAQ,CAACC,GAAT,CAAaC,OAAO,IAAI;AAC3C,aAAOA,OAAO,CAACV,EAAR,KAAeF,aAAf,GACL,EAAC,GAAGY,OAAJ;AAAaN,QAAAA,IAAI,EAAEG;AAAnB,OADK,GAELG,OAFF;AAGD,KAJoB,CAAb,CAAR;AAKD,GAND;;AAQA,QAAMC,eAAe,GAAG,MAAM;AAC5B,WAAOf,KAAK,CAACgB,IAAN,CAAWC,IAAI,IAAI;AACxB,aAAOA,IAAI,CAACb,EAAL,KAAYF,aAAnB;AACD,KAFM,KAEDF,KAAK,CAAC,CAAD,CAFX;AAID,GALD;;AAQA,sBACE;AAAA,cAEGA,KAAK,CAACkB,MAAN,GAAe,CAAf,gBAEA,QAAC,KAAD;AACG,MAAA,KAAK,EAAE,CAAC,EAAD,EAAI,EAAJ,CADV;AAEG,MAAA,SAAS,EAAC,YAFb;AAGG,MAAA,SAAS,EAAC,EAHb;AAAA,8BAKK,QAAC,OAAD;AACE,QAAA,KAAK,EAAElB,KADT;AAEE,QAAA,WAAW,EAAEe,eAAe,EAF9B;AAGE,QAAA,gBAAgB,EAAEZ,gBAHpB;AAIE,QAAA,OAAO,EAAEE;AAJX;AAAA;AAAA;AAAA;AAAA,cALL,EAYSH,aAAa,IACbF,KAAK,CAACkB,MAAN,GAAe,CADf,iBAGA,QAAC,MAAD;AACE,QAAA,WAAW,EAAEH,eAAe,EAD9B;AAEE,QAAA,UAAU,EAAEL;AAFd;AAAA;AAAA;AAAA;AAAA,cAfT;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,gBAyBG;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AA3BN;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CAtED;;GAAMb,G;;KAAAA,G;AAwEN,eAAeA,GAAf","sourcesContent":["import { useState } from 'react';\nimport Split from 'react-split'\nimport Sidebar from './components/Sidebar/Sidebar';\nimport Editor from './components/Editor/Editor';\n\nimport './App.css';\n\nconst App = () => {\n\n  const [count, setCount ] = useState(0)\n\n  const [notes, setNotes ] = useState([])\n\n  const [currentNoteId, setCurrentNoteId] = useState((notes[0] && notes[0].id) || \"\")\n\n  const addNote = () => {\n    const newNote = {\n      id: setCount(prevCount => {prevCount + 1}),\n      body: \"Enter text here\"\n    }\n\n    setNotes(prevNotes => [newNote, ...prevNotes])\n    setCurrentNoteId(newNote.id)\n  }\n\n  const updateNote = (text) => {\n    setNotes(oldNotes => oldNotes.map(oldNote => {\n      return oldNote.id === currentNoteId\n      ? {...oldNote, body: text }\n      : oldNote\n    }))\n  } \n\n  const findCurrentNote = () => {\n    return notes.find(note => {\n      return note.id === currentNoteId\n    }) || notes[0]\n\n  }\n\n\n  return (\n    <main>\n     {\n       notes.length > 0\n       ?\n       <Split\n          sizes={[30,70]}\n          direction=\"horizontal\"\n          className=''\n          >\n            <Sidebar \n              notes={notes}\n              currentNote={findCurrentNote()}\n              setCurrentNoteId={setCurrentNoteId}\n              newNote={addNote}\n              />\n              {\n                currentNoteId && \n                notes.length > 0 && \n\n                <Editor\n                  currentNote={findCurrentNote()}\n                  updateNote={updateNote}\n                />\n              }\n\n          </Split>\n          :\n          <div className='no-notes'>\n            <h1>You have no notes</h1>\n            <button className='first-note'>Create one now</button>\n\n          </div>\n     }\n    </main>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
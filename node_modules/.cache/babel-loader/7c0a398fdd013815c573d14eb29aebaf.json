{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/fbw-07-2/SPA/notetaking-application-obinna/src/App.jsx\";\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to React\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nexport default App; // class NotesApp extends React.Component {\n//   constructor (props) {\n//     super(props);\n//     this.state = {\n//       notes: [],\n//       searchValue: '',\n//       filteredNotes: [],\n//     }\n//   }\n//   componentDidMount() {\n//     var localNotes = JSON.parse(localStorage.getItem('notes'));\n//     if (localNotes) {\n//       this.setState({ notes: localNotes, filteredNotes: localNotes });\n//     }\n//   }\n//   componentDidUpdate() {\n//     this._updateLocalStorage();\n//     if (this.state.searchValue !== ''){\n//       this.setState({\n//         filteredNotes: this.state.notes.filter( note => note.text.toLowerCase().indexOf(this.state.searchValue.toLowerCase()) !== -1 )\n//       })\n//     } else {\n//       this.setState({\n//         filteredNotes: this.state.notes\n//       })\n//     }\n//   }\n//   handleNoteDelete = (note) => {\n//     var noteId = note.id;\n//     var newNotes = this.state.notes.filter(function(note) {\n//       return note.id !== noteId;\n//     });\n//     this.setState({ notes: newNotes });\n//   };\n//   handleNoteAdd = (newNote) => {\n//     var newNotes = this.state.notes.slice();\n//     newNotes.unshift(newNote);\n//     this.setState({ notes: newNotes });\n//   };\n//   handleSearch = (text) => {\n//     this.setState({searchValue: text});\n//   };\n//   render() {\n//     return (\n//       <div className=\"notes-app\">\n//         <h2 className=\"app-header\">NotesApp</h2>\n//         <NoteSearch onSearch={(text) => this.handleSearch(text)} />\n//         <NoteEditor onNoteAdd={this.handleNoteAdd} />\n//         <NotesGrid notes={this.state.filteredNotes} onNoteDelete={this.handleNoteDelete} />\n//       </div>\n//     );\n//   }\n//   _updateLocalStorage = () => {\n//     var notes = JSON.stringify(this.state.notes);\n//     localStorage.setItem('notes', notes);\n//   };\n// };\n// ReactDOM.render(\n//     <NotesApp />,\n//     document.getElementById('mount-point')\n// );\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/user/Documents/fbw-07-2/SPA/notetaking-application-obinna/src/App.jsx"],"names":["React","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,sBACE;AAAA,2BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;KAAMA,G;AAQN,eAAeA,GAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <main>\n     <h1>Welcome to React</h1>\n    </main>\n  );\n}\n\nexport default App;\n\n// class NotesApp extends React.Component {\n//   constructor (props) {\n//     super(props);\n//     this.state = {\n//       notes: [],\n//       searchValue: '',\n//       filteredNotes: [],\n//     }\n//   }\n//   componentDidMount() {\n//     var localNotes = JSON.parse(localStorage.getItem('notes'));\n//     if (localNotes) {\n//       this.setState({ notes: localNotes, filteredNotes: localNotes });\n//     }\n//   }\n\n//   componentDidUpdate() {\n//     this._updateLocalStorage();\n    \n//     if (this.state.searchValue !== ''){\n//       this.setState({\n//         filteredNotes: this.state.notes.filter( note => note.text.toLowerCase().indexOf(this.state.searchValue.toLowerCase()) !== -1 )\n//       })\n//     } else {\n//       this.setState({\n//         filteredNotes: this.state.notes\n//       })\n//     }\n//   }\n\n//   handleNoteDelete = (note) => {\n//     var noteId = note.id;\n//     var newNotes = this.state.notes.filter(function(note) {\n//       return note.id !== noteId;\n//     });\n//     this.setState({ notes: newNotes });\n//   };\n\n//   handleNoteAdd = (newNote) => {\n//     var newNotes = this.state.notes.slice();\n//     newNotes.unshift(newNote);\n//     this.setState({ notes: newNotes });\n//   };\n  \n//   handleSearch = (text) => {\n//     this.setState({searchValue: text});\n//   };\n\n//   render() {\n//     return (\n//       <div className=\"notes-app\">\n//         <h2 className=\"app-header\">NotesApp</h2>\n//         <NoteSearch onSearch={(text) => this.handleSearch(text)} />\n//         <NoteEditor onNoteAdd={this.handleNoteAdd} />\n//         <NotesGrid notes={this.state.filteredNotes} onNoteDelete={this.handleNoteDelete} />\n//       </div>\n//     );\n//   }\n\n//   _updateLocalStorage = () => {\n//     var notes = JSON.stringify(this.state.notes);\n//     localStorage.setItem('notes', notes);\n//   };\n// };\n\n// ReactDOM.render(\n//     <NotesApp />,\n//     document.getElementById('mount-point')\n// );\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/fbw-07-2/SPA/notetaking-application-obinna/src/App.jsx\";\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to React\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nclass NotesApp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNoteDelete = note => {\n      var noteId = note.id;\n      var newNotes = this.state.notes.filter(function (note) {\n        return note.id !== noteId;\n      });\n      this.setState({\n        notes: newNotes\n      });\n    };\n\n    this.handleNoteAdd = newNote => {\n      var newNotes = this.state.notes.slice();\n      newNotes.unshift(newNote);\n      this.setState({\n        notes: newNotes\n      });\n    };\n\n    this.handleSearch = text => {\n      this.setState({\n        searchValue: text\n      });\n    };\n\n    this._updateLocalStorage = () => {\n      var notes = JSON.stringify(this.state.notes);\n      localStorage.setItem('notes', notes);\n    };\n\n    this.state = {\n      notes: [],\n      searchValue: '',\n      filteredNotes: []\n    };\n  }\n\n  componentDidMount() {\n    var localNotes = JSON.parse(localStorage.getItem('notes'));\n\n    if (localNotes) {\n      this.setState({\n        notes: localNotes,\n        filteredNotes: localNotes\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    this._updateLocalStorage();\n\n    if (this.state.searchValue !== '') {\n      this.setState({\n        filteredNotes: this.state.notes.filter(note => note.text.toLowerCase().indexOf(this.state.searchValue.toLowerCase()) !== -1)\n      });\n    } else {\n      this.setState({\n        filteredNotes: this.state.notes\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-app\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"app-header\",\n        children: \"NotesApp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NoteSearch, {\n        onSearch: text => this.handleSearch(text)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NoteEditor, {\n        onNoteAdd: this.handleNoteAdd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NotesGrid, {\n        notes: this.state.filteredNotes,\n        onNoteDelete: this.handleNoteDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\nReactDOM.render( /*#__PURE__*/_jsxDEV(NotesApp, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 80,\n  columnNumber: 5\n}, this), document.getElementById('mount-point'));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/user/Documents/fbw-07-2/SPA/notetaking-application-obinna/src/App.jsx"],"names":["React","App","NotesApp","Component","constructor","props","handleNoteDelete","note","noteId","id","newNotes","state","notes","filter","setState","handleNoteAdd","newNote","slice","unshift","handleSearch","text","searchValue","_updateLocalStorage","JSON","stringify","localStorage","setItem","filteredNotes","componentDidMount","localNotes","parse","getItem","componentDidUpdate","toLowerCase","indexOf","render","ReactDOM","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <main>\n     <h1>Welcome to React</h1>\n    </main>\n  );\n}\n\nexport default App;\n\nclass NotesApp extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      notes: [],\n      searchValue: '',\n      filteredNotes: [],\n    }\n  }\n  componentDidMount() {\n    var localNotes = JSON.parse(localStorage.getItem('notes'));\n    if (localNotes) {\n      this.setState({ notes: localNotes, filteredNotes: localNotes });\n    }\n  }\n\n  componentDidUpdate() {\n    this._updateLocalStorage();\n    \n    if (this.state.searchValue !== ''){\n      this.setState({\n        filteredNotes: this.state.notes.filter( note => note.text.toLowerCase().indexOf(this.state.searchValue.toLowerCase()) !== -1 )\n      })\n    } else {\n      this.setState({\n        filteredNotes: this.state.notes\n      })\n    }\n  }\n\n  handleNoteDelete = (note) => {\n    var noteId = note.id;\n    var newNotes = this.state.notes.filter(function(note) {\n      return note.id !== noteId;\n    });\n    this.setState({ notes: newNotes });\n  };\n\n  handleNoteAdd = (newNote) => {\n    var newNotes = this.state.notes.slice();\n    newNotes.unshift(newNote);\n    this.setState({ notes: newNotes });\n  };\n  \n  handleSearch = (text) => {\n    this.setState({searchValue: text});\n  };\n\n  render() {\n    return (\n      <div className=\"notes-app\">\n        <h2 className=\"app-header\">NotesApp</h2>\n        <NoteSearch onSearch={(text) => this.handleSearch(text)} />\n        <NoteEditor onNoteAdd={this.handleNoteAdd} />\n        <NotesGrid notes={this.state.filteredNotes} onNoteDelete={this.handleNoteDelete} />\n      </div>\n    );\n  }\n\n  _updateLocalStorage = () => {\n    var notes = JSON.stringify(this.state.notes);\n    localStorage.setItem('notes', notes);\n  };\n};\n\nReactDOM.render(\n    <NotesApp />,\n    document.getElementById('mount-point')\n);\n"]},"metadata":{},"sourceType":"module"}